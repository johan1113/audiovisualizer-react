{"version":3,"sources":["components/Home/wave.svg","components/Home/Home.js","components/Audio3D/Audio3D.js","utils/firebase.js","components/MixingBoard/MixingBoard.js","components/Playlist/Playlist.js","contexts/AudioVisualizerContext/AudioVisualizerContext.js","containers/AudioVisualizer/AudioVisualizer.js","containers/App/App.js","index.js"],"names":["module","exports","Home","useState","currentIndex","setCurrentIndex","useEffect","interval","setInterval","clearInterval","className","style","backgroundColor","src","waveSvg","to","AudioVisualization","canvas","bgColor","fgColor","console","log","this","songFile","percent","playing","volume","sceneBackGroundColor","objectsColor","rowTiles","groupTiles","THREE","complete","scene","background","newSongFile","audioElement","pause","setupAudio","newColor","Audio","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","fftSize","smoothingTimeConstant","source","createMediaElementSource","connect","destination","bufferLength","frequencyBinCount","frequencyData","Uint8Array","addEventListener","setTimeout","firstRing","createScene","createCamera","addAmbientLight","addSpotLight","addCameraControls","addFloor","animate","addTilesRow","removeOldTiles","document","evt","target","hidden","play","tiles","length","removedTiles","index","tile","hasOwnProperty","element","TweenMax","delayedCall","scale","z","ease","Power2","easeOut","onComplete","remove","onCompleteParams","splice","hasPrev","position","positions","prevPos","x","geometry","material","color","emissive","col","push","row","pos","y","plane","createObj","set","size","rotateX","radians","add","children","opacity","getByteFrequencyData","i","j","freq","resume","renderer","antialias","offsetWidth","offsetHeight","setSize","shadowMap","enabled","type","appendChild","domElement","requestAnimationFrame","cursor","keyCode","code","camera","controls","OrbitControls","obj","castShadow","receiveShadow","transparent","pivot","ww","wh","aspect","updateProjectionMatrix","planeGeometry","planeMaterial","floor","Math","PI","spotLight","angle","penumbra","decay","distance","shadow","mapSize","width","height","near","far","light","update","render","drawWave","bind","degrees","Audio3D","props","React","songName","setSongName","songArtist","setSongArtist","canvasParent","useRef","sketch","current","onPlay","setSceneColor","setTalesColor","setSongFile","mp3File","getFileName","fileName","replace","split","ref","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fb","MixingBoard","id","accept","onChange","event","newMp3File","URL","createObjectURL","currentTarget","files","name","setMp3File","setFileName","for","display","onClick","setOnPlay","xmlns","xlink","version","viewBox","data-tags","fill","transform","d","setFgColor","hex","setBgColor","firestore","collection","setControllerCase","Playlist","lsSongsList","JSON","parse","localStorage","getItem","listIndex","setListIndex","handleSelectedSong","parseInt","dataset","selectedSong","List","component","aria-label","map","value","ListItem","button","data-index","ListItemText","primary","secondary","ListItemIcon","fontSize","AudioVisualizerContext","createContext","AudioVisualizer","controllerCase","context","Provider","App","from","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8dd6bbec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave.7540868e.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './Home.scss';\r\nimport waveSvg from './wave.svg'\r\n\r\nfunction Home() {\r\n\r\n    const colors = ['red', 'green', 'blue', 'yellow', 'pink', 'purple'];\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentIndex(currentIndex => (currentIndex < 5) ? currentIndex + 1 : 0);\r\n        }, 7000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home\" style={{ backgroundColor: colors[currentIndex] }}>\r\n            \r\n            <div className=\"container\">\r\n                <h1>AUDIO VISUALIZER</h1>\r\n                <img src={waveSvg} />\r\n                <Link to=\"/audiovisualizer\" className=\"button\">LET´S START</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'three-orbitcontrols';\r\nimport { TweenMax, Power2 } from \"gsap/TweenMax\";\r\nimport './Audio3D.scss';\r\n\r\nconst Audio3D = (props) => {\r\n\r\n    const [songName, setSongName] = React.useState(' ');\r\n    const [songArtist, setSongArtist] = React.useState(' ');\r\n\r\n    const canvasParent = React.useRef();\r\n    const sketch = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        sketch.current = AudioVisualization(canvasParent.current, props.bgColor, props.fgColor);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (props.onPlay) {\r\n            sketch.current.play();\r\n        } else {\r\n            sketch.current.pause();\r\n        }\r\n    }, [props.onPlay]);\r\n\r\n    React.useEffect(() => {\r\n        sketch.current.setSceneColor(props.bgColor);\r\n    }, [props.bgColor]);\r\n\r\n    React.useEffect(() => {\r\n        sketch.current.setTalesColor(props.fgColor);\r\n    }, [props.fgColor]);\r\n\r\n    React.useEffect(() => {\r\n        sketch.current.setSongFile(props.mp3File);\r\n    }, [props.mp3File]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        var getFileName = props.fileName.replace('.mp3', '').split('-', 2);\r\n        setSongName(getFileName[1]);\r\n        setSongArtist(getFileName[0]);\r\n    }, [props.fileName]);\r\n\r\n    return (\r\n        <div className=\"Audio3D\" width=\"65%\" height=\"100%\" ref={canvasParent} style={{backgroundColor: props.bgColor}}>\r\n            <h1 style={{color: props.fgColor}}>{songName}</h1>\r\n            <h2 style={{color: props.fgColor}}>{songArtist}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AudioVisualization = (canvas, bgColor, fgColor) => {\r\n\r\n    class App {\r\n\r\n        constructor() {\r\n\r\n            console.log('INGRESA AL CONSTRUCTOR DE AUDIO 3D');\r\n            this.songFile = 'https://iondrimbafilho.me/autotron.mp3';\r\n            //this.songFile = 'https://iondrimbafilho.me/3d5/ocean_drive.mp3';\r\n            //this.songFile = './songs/subhuman.mp3';\r\n\r\n            this.percent = 0;\r\n            this.playing = false;\r\n            this.volume = 1;\r\n            this.sceneBackGroundColor = bgColor;\r\n            this.objectsColor = fgColor;\r\n            this.rowTiles = [];\r\n            this.groupTiles = new THREE.Object3D();\r\n            this.complete();\r\n            this.scene = new THREE.Scene();\r\n            this.scene.background = new THREE.Color(this.sceneBackGroundColor);\r\n        }\r\n\r\n        setSongFile(newSongFile) {\r\n\r\n            if (this.audioElement) {\r\n                this.audioElement.pause();\r\n            }\r\n\r\n            this.songFile = newSongFile;\r\n            console.log('///////////// ENTRA A CAMBIO DE AUDIO ////////////////');\r\n            this.setupAudio();\r\n        }\r\n\r\n        setSceneColor(newColor) {\r\n            this.scene.background = new THREE.Color(newColor);\r\n        }\r\n\r\n        setTalesColor(newColor) {\r\n            this.objectsColor = newColor;\r\n        }\r\n\r\n        setupAudio() {\r\n            this.audioElement = new Audio();\r\n            this.audioElement.src = this.songFile;\r\n            //this.audioElement.controls = false;\r\n            //this.audioElement.loop = true;\r\n            //this.audioElement.autoplay = true;\r\n            //this.audioElement.crossOrigin = 'anonymous';\r\n            //this.audioElement.addEventListener( 'canplaythrough', audioLoaded, false );\r\n\r\n            this.audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n            this.analyser = this.audioCtx.createAnalyser();\r\n            this.analyser.fftSize = 2048;\r\n            this.analyser.smoothingTimeConstant = .85;\r\n\r\n            this.source = this.audioCtx.createMediaElementSource(this.audioElement);\r\n            this.source.connect(this.analyser);\r\n            this.source.connect(this.audioCtx.destination);\r\n\r\n            this.bufferLength = this.analyser.frequencyBinCount;\r\n\r\n            this.frequencyData = new Uint8Array(this.bufferLength);\r\n            this.audioElement.volume = this.volume;\r\n\r\n            this.audioElement.addEventListener('playing', () => {\r\n                this.playing = true;\r\n            });\r\n            this.audioElement.addEventListener('pause', () => {\r\n                this.playing = false;\r\n            });\r\n            this.audioElement.addEventListener('ended', () => {\r\n                this.playing = false;\r\n                this.pause();\r\n            });\r\n        }\r\n\r\n        complete() {\r\n            setTimeout(() => {\r\n                this.firstRing = new THREE.Object3D();\r\n\r\n                this.setupAudio();\r\n                this.createScene();\r\n                this.createCamera();\r\n                this.addAmbientLight();\r\n                this.addSpotLight();\r\n                this.addCameraControls();\r\n                this.addFloor();\r\n                this.animate();\r\n                this.addEventListener();\r\n\r\n                setInterval(() => {\r\n                    if (this.playing) {\r\n                        this.addTilesRow(this.rowTiles);\r\n                        this.removeOldTiles(this.rowTiles);\r\n                    }\r\n                }, 600);\r\n            });\r\n\r\n            document.addEventListener('visibilitychange', (evt) => {\r\n                if (evt.target.hidden) {\r\n                    this.pause();\r\n                } else {\r\n                    this.play();\r\n                }\r\n\r\n            }, false);\r\n        }\r\n\r\n        visibilityChange() {\r\n\r\n        }\r\n\r\n        removeOldTiles(tiles) {\r\n            if (tiles.length % 25 === 0) {\r\n                const removedTiles = tiles[0];\r\n                let index = 0;\r\n\r\n                for (const tile in removedTiles) {\r\n                    if (removedTiles.hasOwnProperty(tile)) {\r\n                        const element = removedTiles[tile];\r\n\r\n                        TweenMax.delayedCall(0.07 * index, () => {\r\n                            TweenMax.to(element.scale, .5, {\r\n                                z: 0.01,\r\n                                ease: Power2.easeOut,\r\n                                onComplete: (element) => {\r\n                                    this.groupTiles.remove(element);\r\n                                },\r\n                                onCompleteParams: [element]\r\n                            });\r\n                        });\r\n                        index++;\r\n                    }\r\n                }\r\n\r\n                tiles = tiles.splice(0, 1);\r\n            }\r\n        }\r\n\r\n        addTilesRow(tiles) {\r\n            const rows = 8;\r\n            const cols = 1;\r\n            const gutter = 1.05;\r\n            const hasPrev = tiles.length && tiles[tiles.length - 1][0].position;\r\n            let positions = [];\r\n            let index = 0;\r\n            let prevPos = 0;\r\n\r\n            if (tiles.length) {\r\n                prevPos = tiles[tiles.length - 1][0].position.x + gutter;\r\n            }\r\n\r\n            const size = .5;\r\n            const geometry = new THREE.BoxGeometry(size, size, 5);\r\n            const material = new THREE.MeshLambertMaterial({\r\n                color: this.objectsColor,\r\n                emissive: 0x0\r\n            });\r\n\r\n            for (let col = 0; col < cols; col++) {\r\n                positions[col] = [];\r\n                tiles.push([]);\r\n\r\n                for (let row = 0; row < rows; row++) {\r\n                    const pos = {\r\n                        z: row,\r\n                        y: 3,\r\n                        x: hasPrev ? prevPos : col\r\n                    }\r\n\r\n                    positions[col][row] = pos;\r\n                    const plane = this.createObj(this.objectsColor, geometry, material);\r\n\r\n                    plane.scale.set(1, 1, 0.01);\r\n\r\n                    if (col > 0) {\r\n                        pos.x = (positions[col - 1][row].x * plane.size) + gutter;\r\n                    }\r\n\r\n                    if (row > 0) {\r\n                        pos.z = (positions[col][row - 1].z * plane.size) + gutter;\r\n                    }\r\n\r\n                    plane.position.set(pos.x, pos.y, pos.z);\r\n\r\n                    plane.rotateX(this.radians(90));\r\n\r\n                    this.groupTiles.add(plane);\r\n\r\n                    TweenMax.delayedCall(0.1 * index, () => {\r\n                        TweenMax.to(plane.children[0].material, .3, {\r\n                            opacity: 1,\r\n                            ease: Power2.easeOut\r\n                        });\r\n                    });\r\n\r\n                    tiles[tiles.length - 1].push(plane);\r\n\r\n                    index++;\r\n                }\r\n\r\n                index++;\r\n            }\r\n\r\n            positions = null;\r\n        }\r\n\r\n\r\n        drawWave() {\r\n            if (this.playing) {\r\n                this.analyser.getByteFrequencyData(this.frequencyData);\r\n                let index = 0;\r\n\r\n                for (var i = 0; i < this.rowTiles.length; i++) {\r\n                    for (var j = 0; j < this.rowTiles[i].length; j++) {\r\n                        const freq = this.frequencyData[index];\r\n                        let scale = freq / 50 <= 0 ? 0.01 : freq / 50;\r\n\r\n                        TweenMax.to(this.rowTiles[i][j].scale, .2, {\r\n                            z: scale - 3 < 0 ? 0.01 : scale - 3\r\n                        });\r\n                        index++;\r\n                    }\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        pause() {\r\n            if (this.audioElement != null) {\r\n                this.audioElement.pause();\r\n            }\r\n        }\r\n\r\n        play() {\r\n            this.audioCtx.resume();\r\n            this.audioElement.play();\r\n        }\r\n\r\n        createScene() {\r\n            this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n            console.log('width: ' + canvas.offsetWidth + '  //   height:' + canvas.offsetHeight);\r\n            this.renderer.setSize(canvas.offsetWidth, canvas.offsetHeight);\r\n\r\n            this.renderer.shadowMap.enabled = true;\r\n            this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n            this.groupTiles.position.set(10, 0, -5);\r\n            this.scene.add(this.groupTiles);\r\n\r\n            canvas.appendChild(this.renderer.domElement);\r\n        }\r\n\r\n        addEventListener() {\r\n            /*\r\n            playIntro.addEventListener('click', (evt) => {\r\n                evt.currentTarget.classList.remove('control-show');\r\n                this.play();\r\n            });\r\n            */\r\n\r\n            canvas.addEventListener('mouseup', () => {\r\n                requestAnimationFrame(() => {\r\n                    canvas.style.cursor = '-moz-grab';\r\n                    canvas.style.cursor = '-webkit-grab';\r\n                });\r\n            });\r\n\r\n            canvas.addEventListener('mousedown', () => {\r\n                requestAnimationFrame(() => {\r\n                    canvas.style.cursor = '-moz-grabbing';\r\n                    canvas.style.cursor = '-webkit-grabbing';\r\n                });\r\n            });\r\n\r\n            canvas.addEventListener('keyup', (evt) => {\r\n                if (evt.keyCode === 32 || evt.code === 'Space') {\r\n                    this.playing ? this.pause() : this.play();\r\n                }\r\n            });\r\n        }\r\n\r\n        createCamera() {\r\n            this.camera = new THREE.PerspectiveCamera(30, canvas.offsetWidth / canvas.offsetHeight, 1, 1000);\r\n            this.camera.position.set(50, 50, -50);\r\n            this.scene.add(this.camera);\r\n        }\r\n\r\n        addCameraControls() {\r\n            this.controls = new OrbitControls(this.camera);\r\n        }\r\n\r\n        createObj(color, geometry, material) {\r\n            const obj = new THREE.Mesh(geometry, material);\r\n\r\n            obj.castShadow = true;\r\n            obj.receiveShadow = true;\r\n            obj.position.z = -2.5;\r\n            obj.size = 1;\r\n            obj.material.opacity = 0;\r\n            obj.material.transparent = true;\r\n\r\n            const pivot = new THREE.Object3D();\r\n\r\n            pivot.add(obj);\r\n            pivot.size = 1;\r\n\r\n            return pivot;\r\n        }\r\n\r\n        onResize() {\r\n            const ww = canvas.offsetWidth;\r\n            const wh = canvas.offsetHeight;\r\n\r\n            this.camera.aspect = ww / wh;\r\n            this.camera.updateProjectionMatrix();\r\n            this.renderer.setSize(ww, wh);\r\n        }\r\n\r\n        addFloor() {\r\n            const planeGeometry = new THREE.PlaneGeometry(250, 250);\r\n            const planeMaterial = new THREE.ShadowMaterial({ opacity: .05 });\r\n\r\n            this.floor = new THREE.Mesh(planeGeometry, planeMaterial);\r\n\r\n            planeGeometry.rotateX(- Math.PI / 2);\r\n\r\n            this.floor.position.y = 0;\r\n            this.floor.receiveShadow = true;\r\n\r\n            this.scene.add(this.floor);\r\n        }\r\n\r\n        addSpotLight() {\r\n            this.spotLight = new THREE.SpotLight(0xffffff);\r\n            this.spotLight.position.set(-10, 60, -10);\r\n            this.spotLight.castShadow = true;\r\n            this.spotLight.angle = Math.PI / 4;\r\n            this.spotLight.penumbra = 0;\r\n            this.spotLight.decay = .5;\r\n            this.spotLight.distance = 100;\r\n            this.spotLight.shadow.mapSize.width = 1024;\r\n            this.spotLight.shadow.mapSize.height = 1024;\r\n            this.spotLight.shadow.camera.near = 10;\r\n            this.spotLight.shadow.camera.far = 100;\r\n\r\n            this.scene.add(this.spotLight);\r\n        }\r\n\r\n        addAmbientLight() {\r\n            const light = new THREE.AmbientLight(0xffffff);\r\n\r\n            this.scene.add(light);\r\n        }\r\n\r\n        animate() {\r\n            this.controls.update();\r\n\r\n            if (this.rowTiles[this.rowTiles.length - 1]) {\r\n                const x = -this.rowTiles[this.rowTiles.length - 1][0].position.x + 15;\r\n\r\n                TweenMax.to(this.groupTiles.position, 1, {\r\n                    x: x,\r\n                    ease: Power2.easeOut\r\n                });\r\n            }\r\n\r\n            this.renderer.render(this.scene, this.camera);\r\n\r\n            this.drawWave();\r\n\r\n            requestAnimationFrame(this.animate.bind(this));\r\n        }\r\n\r\n        radians(degrees) {\r\n            return degrees * Math.PI / 180;\r\n        }\r\n    }\r\n\r\n    var app = new App();\r\n\r\n    return app;\r\n\r\n}\r\n\r\n\r\nexport default Audio3D;","import * as firebase from \"firebase/app\";\r\n\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAYYs41KC3DqZL-_o4wqD1GGEugnGhPF8E\",\r\n    authDomain: \"audio-visualizer-7580f.firebaseapp.com\",\r\n    databaseURL: \"https://audio-visualizer-7580f.firebaseio.com\",\r\n    projectId: \"audio-visualizer-7580f\",\r\n    storageBucket: \"audio-visualizer-7580f.appspot.com\",\r\n    messagingSenderId: \"639471632856\",\r\n    appId: \"1:639471632856:web:2b49cb621d4a5531a9b2ad\",\r\n    measurementId: \"G-DB51N4BCSX\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fb = firebase;","import React from 'react';\r\nimport './MixingBoard.scss';\r\nimport { CirclePicker } from 'react-color';\r\nimport { fb } from '../../utils/firebase';\r\n\r\nconst MixingBoard = (props) => {\r\n\r\n    const handleBgColorChange = (bgColor) => {\r\n        props.setBgColor(bgColor.hex);\r\n        console.log(bgColor.hex);\r\n        console.log(props.bgColor);\r\n    }\r\n\r\n    const handleFgColorChange = (fgColor) => {\r\n        props.setFgColor(fgColor.hex);\r\n        console.log(fgColor.hex);\r\n        console.log(props.fgColor);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        var newMp3File = URL.createObjectURL(event.currentTarget.files[0]);\r\n        var fileName = event.currentTarget.files[0].name;\r\n        console.log('/////// NEW MP3 FILE //////////')\r\n        console.log(newMp3File);\r\n        console.log(fileName);\r\n        props.setMp3File(newMp3File);\r\n        props.setFileName(fileName);\r\n    }\r\n\r\n    const handlePlay = () => {\r\n        props.setOnPlay(true);\r\n    }\r\n\r\n    const handleStop = () => {\r\n        props.setOnPlay(false);\r\n    }\r\n\r\n    const handleSavedSongs = () => {\r\n\r\n        //localStorage.clear();\r\n        //var lsSongsList = JSON.parse(localStorage.getItem('songsList'));\r\n        let db = fb.firestore();\r\n        db.collection('songs').add({\r\n            mp3File : props.mp3File,\r\n            fileName: props.fileName,\r\n            fgColor: props.fgColor,\r\n            bgColor: props.bgColor\r\n        });\r\n\r\n        console.log('/////////// SE ACTUALIZÓ FIREBASE //////////////');\r\n        /*\r\n        var newSong = {\r\n            mp3File : props.mp3File,\r\n            fileName: props.fileName,\r\n            fgColor: props.fgColor,\r\n            bgColor: props.bgColor\r\n        }\r\n\r\n        if(lsSongsList != null){\r\n            lsSongsList.push(newSong);\r\n        }else{\r\n            lsSongsList = [];\r\n            lsSongsList.push(newSong);\r\n        }\r\n        localStorage.setItem('songsList', JSON.stringify(lsSongsList));\r\n\r\n        console.log('/////////// SE ACTUALIZÓ EL LOCAL STORAGE //////////////');\r\n        console.log(JSON.parse(localStorage.getItem('songsList')));\r\n        */\r\n    }\r\n\r\n    const handlePlaylist = () => {\r\n        props.setControllerCase(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"MixingBoard\">\r\n\r\n            <div className=\"title\">\r\n                <h1>Sound Mixer</h1>\r\n            </div>\r\n\r\n            <div className=\"loaderPlayer\">\r\n                <input type=\"file\" id=\"labelSong\" accept=\".mp3\" onChange={handleChange} />\r\n                <label className=\"button\" id=\"btn_black\" for=\"labelSong\">Load Audio</label>\r\n\r\n                <div className=\"controls\">\r\n                    <button className=\"play\" style={{ display: !props.onPlay ? 'block' : 'none' }} onClick={handlePlay}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"32\" height=\"32\" viewBox=\"0 0 25 32\"\r\n                            data-tags=\"play,media control\">\r\n                            <g fill=\"#000000\" transform=\"scale(0.03125 0.03125)\">\r\n                                <path d=\"M192 0v1024l640-511.264-640-512.736z\" />\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                    <button className=\"pause\" style={{ display: props.onPlay ? 'block' : 'none' }} onClick={handleStop}>\r\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"\r\n                            data-tags=\"pause,media control\">\r\n                            <g fill=\"#000000\" transform=\"scale(0.03125 0.03125)\">\r\n                                <path d=\"M352 0h-192c-17.696 0-32 14.336-32 32v960c0 17.696 14.304 32 32 32h192c17.696 0 32-14.304 32-32v-960c0-17.664-14.304-32-32-32zM864 0h-192c-17.696 0-32 14.336-32 32v960c0 17.696 14.304 32 32 32h192c17.696 0 32-14.304 32-32v-960c0-17.664-14.304-32-32-32z\"\r\n                                />\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <section id=\"fg\">\r\n                <h2>Figures Color</h2>\r\n                <CirclePicker color={props.fgColor} onChange={handleFgColorChange} />\r\n            </section>\r\n\r\n            <section id=\"bg\">\r\n                <h2>Background Color</h2>\r\n                <CirclePicker color={props.bgColor} onChange={handleBgColorChange} />\r\n            </section>\r\n\r\n            <div className=\"windowButtons\">\r\n                <button className=\"button\" id=\"btn_black\" onClick={handleSavedSongs}>save this song</button>\r\n                <button className=\"button\" id=\"btn_black\" onClick={handlePlaylist}>your saved songs</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MixingBoard;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport './Playlist.scss';\r\n\r\nconst Playlist = (props) => {\r\n\r\n    const lsSongsList = JSON.parse(localStorage.getItem('songsList'));\r\n    const [listIndex, setListIndex] = React.useState(0);\r\n\r\n    const handleSoundMixer = () => {\r\n        props.setControllerCase(0);\r\n    }\r\n\r\n    const handlePlay = () => {\r\n        props.setOnPlay(true);\r\n    }\r\n\r\n    const handleStop = () => {\r\n        props.setOnPlay(false);\r\n    }\r\n\r\n    const handleSelectedSong = (event) => {\r\n        console.log('//////// ingresa a selected song ///////////');\r\n        setListIndex(parseInt(event.currentTarget.dataset.index));\r\n        console.log(listIndex);\r\n        const selectedSong = lsSongsList[listIndex];\r\n\r\n        props.setBgColor(selectedSong.bgColor);\r\n        props.setFgColor(selectedSong.fgColor);\r\n        props.setMp3File(selectedSong.mp3File);\r\n        props.setFileName(selectedSong.fileName);\r\n    }\r\n\r\n    const handlePreviousSong = () => {\r\n\r\n        console.log('////////// entra a previous song //////////');\r\n        console.log(listIndex);\r\n        console.log(lsSongsList.length);\r\n\r\n        if(listIndex == 0){\r\n            setListIndex(lsSongsList.length-1);\r\n        }else{\r\n            setListIndex(listIndex-1);\r\n        }\r\n\r\n        const selectedSong = lsSongsList[listIndex];\r\n        props.setBgColor(selectedSong.bgColor);\r\n        props.setFgColor(selectedSong.fgColor);\r\n        props.setMp3File(selectedSong.mp3File);\r\n        props.setFileName(selectedSong.fileName);\r\n    }\r\n\r\n    const handleNextSong = () => {\r\n\r\n        console.log('////////// entra a next song //////////');\r\n        console.log(listIndex);\r\n        console.log(lsSongsList.length);\r\n\r\n        if(listIndex === (lsSongsList.length-1)){\r\n            setListIndex(0);\r\n        }else{\r\n            setListIndex(listIndex+1);\r\n        }\r\n\r\n        const selectedSong = lsSongsList[listIndex];\r\n        props.setBgColor(selectedSong.bgColor);\r\n        props.setFgColor(selectedSong.fgColor);\r\n        props.setMp3File(selectedSong.mp3File);\r\n        props.setFileName(selectedSong.fileName);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Playlist\">\r\n\r\n            <div className=\"title\">\r\n                <h1>My Playlist</h1>\r\n            </div>\r\n\r\n            {lsSongsList != null\r\n                ?\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\" className=\"songs-list\" id=\"scrollbar\">\r\n                    {lsSongsList.map((value, index) => {\r\n                        return <ListItem button onClick={handleSelectedSong} data-index={index}> <ListItemText primary={value.fileName.replace('.mp3', '').split('-', 2)[1]} secondary={value.fileName.replace('.mp3', '').split('-', 2)[0]} /> <ListItemIcon> <RadioButtonUncheckedIcon style={{ fill: value.fgColor }} /> <FiberManualRecordIcon style={{ fill: value.bgColor }} /> </ListItemIcon>  </ListItem>\r\n                    })}\r\n                </List>\r\n                :\r\n                <h3>First, you need to save your songs</h3>\r\n            }\r\n\r\n            <div className=\"controls\">\r\n\r\n                <SkipPreviousIcon button onClick={handlePreviousSong}  style={{fill: 'black'}} fontSize=\"large\"/>\r\n\r\n                <button className=\"play\" style={{ display: !props.onPlay ? 'block' : 'none' }} onClick={handlePlay}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"32\" height=\"32\" viewBox=\"0 0 25 32\"\r\n                        data-tags=\"play,media control\">\r\n                        <g fill=\"#000000\" transform=\"scale(0.03125 0.03125)\">\r\n                            <path d=\"M192 0v1024l640-511.264-640-512.736z\" />\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n\r\n                <button className=\"pause\" style={{ display: props.onPlay ? 'block' : 'none' }} onClick={handleStop}>\r\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"\r\n                        data-tags=\"pause,media control\">\r\n                        <g fill=\"#000000\" transform=\"scale(0.03125 0.03125)\">\r\n                            <path d=\"M352 0h-192c-17.696 0-32 14.336-32 32v960c0 17.696 14.304 32 32 32h192c17.696 0 32-14.304 32-32v-960c0-17.664-14.304-32-32-32zM864 0h-192c-17.696 0-32 14.336-32 32v960c0 17.696 14.304 32 32 32h192c17.696 0 32-14.304 32-32v-960c0-17.664-14.304-32-32-32z\"\r\n                            />\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n\r\n                <SkipNextIcon button onClick={handleNextSong} style={{fill: 'black'}} fontSize=\"large\"/>\r\n\r\n            </div>\r\n\r\n            <div className=\"windowButtons\">\r\n                <button className=\"button\" id=\"btn_black\" onClick={handleSoundMixer}>get back to Sound Mixer</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;","import React from 'react';\r\n\r\nconst AudioVisualizerContext = React.createContext({\r\n    bgColor: '#fff700',\r\n    setBgColor: () => null,\r\n    fgColor: '#ae12d4',\r\n    setFgColor: () => null,\r\n    mp3File: 'https://iondrimbafilho.me/3d5/ocean_drive.mp3',\r\n    setMp3File: () => null,\r\n});\r\n\r\nexport default AudioVisualizerContext;","import React from 'react';\r\nimport Audio3D from '../../components/Audio3D/Audio3D';\r\nimport MixingBoard from '../../components/MixingBoard/MixingBoard';\r\nimport Playlist from '../../components/Playlist/Playlist';\r\nimport './AudioVisualizer.scss';\r\nimport AudioVisualizerContext from '../../contexts/AudioVisualizerContext/AudioVisualizerContext';\r\n\r\nfunction AudioVisualizer() {\r\n\r\n    const [bgColor, setBgColor] = React.useState('#fff700');\r\n    const [fgColor, setFgColor] = React.useState('#ae12d4');\r\n    const [onPlay, setOnPlay] = React.useState(false);\r\n    const [mp3File, setMp3File] = React.useState('https://iondrimbafilho.me/3d5/ocean_drive.mp3');\r\n    const [fileName, setFileName] = React.useState('Artista - Título.mp3');\r\n    const [controllerCase, setControllerCase] = React.useState(0);\r\n\r\n    const context = {\r\n        bgColor: bgColor,\r\n        setBgColor: setBgColor,\r\n        fgColor: fgColor,\r\n        setFgColor: setFgColor,\r\n        onPlay: onPlay,\r\n        setOnPlay: setOnPlay,\r\n        mp3File: mp3File,\r\n        setMp3File: setMp3File,\r\n        fileName: fileName,\r\n        setFileName: setFileName,\r\n        controllerCase: controllerCase,\r\n        setControllerCase: setControllerCase\r\n    }\r\n\r\n    return (\r\n        <div className=\"AudioVisualizer\">\r\n\r\n            <AudioVisualizerContext.Provider value={context}>\r\n\r\n                {controllerCase == 0\r\n                    ? <MixingBoard setBgColor={setBgColor} setFgColor={setFgColor} setOnPlay={setOnPlay} setMp3File={setMp3File} setFileName={setFileName} setControllerCase={setControllerCase} bgColor={bgColor} fgColor={fgColor} onPlay={onPlay} mp3File={mp3File} fileName={fileName} />\r\n                    : <Playlist setControllerCase={setControllerCase} setBgColor={setBgColor} setFgColor={setFgColor} setOnPlay={setOnPlay} setMp3File={setMp3File} setFileName={setFileName} onPlay={onPlay} />\r\n                }\r\n\r\n                <Audio3D bgColor={bgColor} fgColor={fgColor} onPlay={onPlay} mp3File={mp3File} fileName={fileName} />\r\n\r\n            </AudioVisualizerContext.Provider>\r\n            {/*\r\n            <AudioVisualization />\r\n            */}\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AudioVisualizer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../../components/Home/Home';\nimport AudioVisualizer from '../AudioVisualizer/AudioVisualizer';\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Redirect\n          from=\"/\"\n          to=\"/home\" />\n\n        {/*usar basename en el switch para la publicación en github pages*/\n        //LINK DE LA PÁGINA-TUTORIAL DE PUBLICACIÓN EN GITHUB PAGES\n        //https://github.com/gitname/react-gh-pages\n        }\n        <Switch>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/audiovisualizer\" component={AudioVisualizer} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}